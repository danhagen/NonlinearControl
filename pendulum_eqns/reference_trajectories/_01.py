import numpy as np

Amp = 7.5*np.pi/180
Base = 90*np.pi/180
Freq = 2*np.pi

# N_seconds = 1
# N = N_seconds*10000 + 1
# t = np.linspace(0,N_seconds,N)
# dt = t[1]-t[0]

### Reference Trajectory ###
# coeffs = [126,-420,540,-315,70]
#
# r = lambda t: float(np.piecewise(t,[t%1<0.5,t%1>=0.5],
#     [
#         lambda t : (Base+Amp) - 2*Amp*(
#             coeffs[0]*((t%1)/0.5)**5
#             + coeffs[1]*((t%1)/0.5)**6
#             + coeffs[2]*((t%1)/0.5)**7
#             + coeffs[3]*((t%1)/0.5)**8
#             + coeffs[4]*((t%1)/0.5)**9
#         ),
#         lambda t : (Base-Amp) + 2*Amp*(
#             coeffs[0]*((t%1-0.5)/0.5)**5
#             + coeffs[1]*((t%1-0.5)/0.5)**6
#             + coeffs[2]*((t%1-0.5)/0.5)**7
#             + coeffs[3]*((t%1-0.5)/0.5)**8
#             + coeffs[4]*((t%1-0.5)/0.5)**9
#         )
#     ]
# ))
# dr = lambda t: float(np.piecewise(t,[t%1<0.5,t%1>=0.5],
#     [
#         lambda t : -2*Amp/(0.5)*(
#             5*coeffs[0]*((t%1)/0.5)**(5-1)
#             + 6*coeffs[1]*((t%1)/0.5)**(6-1)
#             + 7*coeffs[2]*((t%1)/0.5)**(7-1)
#             + 8*coeffs[3]*((t%1)/0.5)**(8-1)
#             + 9*coeffs[4]*((t%1)/0.5)**(9-1)
#         ),
#         lambda t : 2*Amp/(0.5)*(
#             5*coeffs[0]*((t%1-0.5)/0.5)**(5-1)
#             + 6*coeffs[1]*((t%1-0.5)/0.5)**(6-1)
#             + 7*coeffs[2]*((t%1-0.5)/0.5)**(7-1)
#             + 8*coeffs[3]*((t%1-0.5)/0.5)**(8-1)
#             + 9*coeffs[4]*((t%1-0.5)/0.5)**(9-1)
#         )
#     ]
# ))
# d2r = lambda t: float(np.piecewise(t,[t%1<0.5,t%1>=0.5],
#     [
#         lambda t : -2*Amp/(0.5**2)*(
#             (5-1)*5*coeffs[0]*((t%1)/0.5)**(5-2)
#             + (6-1)*6*coeffs[1]*((t%1)/0.5)**(6-2)
#             + (7-1)*7*coeffs[2]*((t%1)/0.5)**(7-2)
#             + (8-1)*8*coeffs[3]*((t%1)/0.5)**(8-2)
#             + (9-1)*9*coeffs[4]*((t%1)/0.5)**(9-2)
#         ),
#         lambda t : 2*Amp/(0.5**2)*(
#             (5-1)*5*coeffs[0]*((t%1-0.5)/0.5)**(5-2)
#             + (6-1)*6*coeffs[1]*((t%1-0.5)/0.5)**(6-2)
#             + (7-1)*7*coeffs[2]*((t%1-0.5)/0.5)**(7-2)
#             + (8-1)*8*coeffs[3]*((t%1-0.5)/0.5)**(8-2)
#             + (9-1)*9*coeffs[4]*((t%1-0.5)/0.5)**(9-2)
#         )
#     ]
# ))
# d3r = lambda t: float(np.piecewise(t,[t%1<0.5,t%1>=0.5],
#     [
#         lambda t : -2*Amp/(0.5**3)*(
#             (5-2)*(5-1)*5*coeffs[0]*((t%1)/0.5)**(5-3)
#             + (6-2)*(6-1)*6*coeffs[1]*((t%1)/0.5)**(6-3)
#             + (7-2)*(7-1)*7*coeffs[2]*((t%1)/0.5)**(7-3)
#             + (8-2)*(8-1)*8*coeffs[3]*((t%1)/0.5)**(8-3)
#             + (9-2)*(9-1)*9*coeffs[4]*((t%1)/0.5)**(9-3)
#         ),
#         lambda t : 2*Amp/(0.5**3)*(
#             (5-2)*(5-1)*5*coeffs[0]*((t%1-0.5)/0.5)**(5-3)
#             + (6-2)*(6-1)*6*coeffs[1]*((t%1-0.5)/0.5)**(6-3)
#             + (7-2)*(7-1)*7*coeffs[2]*((t%1-0.5)/0.5)**(7-3)
#             + (8-2)*(8-1)*8*coeffs[3]*((t%1-0.5)/0.5)**(8-3)
#             + (9-2)*(9-1)*9*coeffs[4]*((t%1-0.5)/0.5)**(9-3)
#         )
#     ]
# ))
# d4r = lambda t: float(np.piecewise(t,[t%1<0.5,t%1>=0.5],
#     [
#         lambda t : -2*Amp/(0.5**4)*(
#             (5-3)*(5-2)*(5-1)*5*coeffs[0]*((t%1)/0.5)**(5-4)
#             + (6-3)*(6-2)*(6-1)*6*coeffs[1]*((t%1)/0.5)**(6-4)
#             + (7-3)*(7-2)*(7-1)*7*coeffs[2]*((t%1)/0.5)**(7-4)
#             + (8-3)*(8-2)*(8-1)*8*coeffs[3]*((t%1)/0.5)**(8-4)
#             + (9-3)*(9-2)*(9-1)*9*coeffs[4]*((t%1)/0.5)**(9-4)
#         ),
#         lambda t : 2*Amp/(0.5**4)*(
#             (5-3)*(5-2)*(5-1)*5*coeffs[0]*((t%1-0.5)/0.5)**(5-4)
#             + (6-3)*(6-2)*(6-1)*6*coeffs[1]*((t%1-0.5)/0.5)**(6-4)
#             + (7-3)*(7-2)*(7-1)*7*coeffs[2]*((t%1-0.5)/0.5)**(7-4)
#             + (8-3)*(8-2)*(8-1)*8*coeffs[3]*((t%1-0.5)/0.5)**(8-4)
#             + (9-3)*(9-2)*(9-1)*9*coeffs[4]*((t%1-0.5)/0.5)**(9-4)
#         )
#     ]
# ))
r = lambda t: Amp*np.cos(Freq*t) + Base
dr = lambda t: -Amp*Freq*np.sin(Freq*t)
d2r = lambda t: -Amp*Freq**2*np.cos(Freq*t)
d3r = lambda t: Amp*Freq**3*np.sin(Freq*t)
d4r = lambda t: Amp*Freq**4*np.cos(Freq*t)

############################
